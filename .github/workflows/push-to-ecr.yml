name: Deploy to Amazon ECR

on: workflow_dispatch

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 837437137527.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: raspberry-pi
  EC2_USER: ec2-user
  EC2_HOST: 3.239.42.158

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4 # This GitHub Action checks out your repository so your workflow can access it

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # This is a GitHub Action provided by AWS that configures the AWS CLI
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push client Docker image
        run: |
          docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:react-latest ./client
          docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:react-latest

      - name: Build and push node Docker image
        run: |
          docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:node-latest ./server
          docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:node-latest

      - name: Upload docker-compose and nginx files to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
          scp -o StrictHostKeyChecking=no -i /tmp/id_rsa ${{ github.workspace }}/docker-compose.yml ${{ github.workspace }}/nginx.conf ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:~/

      - name: Deploy to Amazon EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{env.ECR_REGISTRY}}
            docker-compose pull
            docker-compose up -d

      - name: Clean up # This step removes the SSH key from the runner
        run: |
          rm /tmp/id_rsa
