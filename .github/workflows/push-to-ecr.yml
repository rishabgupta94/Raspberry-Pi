name: Deploy to Amazon ECR

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 837437137527.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: raspberry-pi

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # This GitHub Action checks out your repository so your workflow can access it

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # This is a GitHub Action provided by AWS that configures the AWS CLI
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{env.ECR_REGISTRY}}

      - name: Build and push client Docker image
        run: |
          docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:react-latest ./client
          docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:react-latest
          echo "image= ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:react-latest" >> $GITHUB_OUTPUT

      - name: Build and push node Docker image
        run: |
          docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:node-latest ./server
          docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:node-latest
          echo "image= ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:node-latest" >> $GITHUB_ENV
